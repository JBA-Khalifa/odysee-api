// Code generated by goa v3.4.2, DO NOT EDIT.
//
// reporter service
//
// Command:
// $ goa gen github.com/lbryio/lbrytv/apps/watchman/design -o apps/watchman

package reporter

import (
	"context"
)

// Media playback reports
type Service interface {
	// Add implements add.
	Add(context.Context, *PlaybackReport) (err error)
	// Healthz implements healthz.
	Healthz(context.Context) (res string, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "reporter"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"add", "healthz"}

// PlaybackReport is the payload type of the reporter service add method.
type PlaybackReport struct {
	// LBRY URL
	URL string
	// Event duration, ms
	Dur int32
	// Current playback report stream position, ms
	Position int32
	// Relative stream position, pct, 0â€”100
	RelPosition int32
	// Rebuffering events count
	RebufCount int32
	// Rebuffering events total duration, ms
	RebufDuration int32
	// Video format, stb (binary stream) or HLS
	Format string
	// Player server name
	Player string
	// Unique client ID
	Client string
	// Client download rate, bit/s
	ClientRate *int32
	// Client device
	Device string
	// Timestamp
	T string
}
