// Code generated by goa v3.2.6, DO NOT EDIT.
//
// playback HTTP client CLI support package
//
// Command:
// $ goa gen github.com/lbryio/lbrytv/apps/watchman/design -o apps/watchman

package client

import (
	"encoding/json"
	"fmt"
	"unicode/utf8"

	playback "github.com/lbryio/lbrytv/apps/watchman/gen/playback"
	goa "goa.design/goa/v3/pkg"
)

// BuildAddPayload builds the payload for the playback add endpoint from CLI
// flags.
func BuildAddPayload(playbackAddBody string) (*playback.Playback, error) {
	var err error
	var body AddRequestBody
	{
		err = json.Unmarshal([]byte(playbackAddBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"bfc\": 2090117172,\n      \"bfd\": 17251565766128185860,\n      \"car\": \"eu\",\n      \"cdv\": \"web\",\n      \"cid\": \"b026324c6904b2a9cb4b88d6d61c81d1\",\n      \"crt\": 12429558419691439090,\n      \"dur\": 679116,\n      \"fmt\": \"hls\",\n      \"pid\": \"player16\",\n      \"pos\": 5772200059818313417,\n      \"url\": \"lbry://what\"\n   }'")
		}
		if utf8.RuneCountInString(body.URL) > 512 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.url", body.URL, utf8.RuneCountInString(body.URL), 512, false))
		}
		if body.Dur < 1000 {
			err = goa.MergeErrors(err, goa.InvalidRangeError("body.dur", body.Dur, 1000, true))
		}
		if body.Dur > 3.6e+06 {
			err = goa.MergeErrors(err, goa.InvalidRangeError("body.dur", body.Dur, 3.6e+06, false))
		}
		if !(body.Fmt == "def" || body.Fmt == "hls") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.fmt", body.Fmt, []interface{}{"def", "hls"}))
		}
		if utf8.RuneCountInString(body.Pid) > 32 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.pid", body.Pid, utf8.RuneCountInString(body.Pid), 32, false))
		}
		if body.Car != nil {
			if utf8.RuneCountInString(*body.Car) > 3 {
				err = goa.MergeErrors(err, goa.InvalidLengthError("body.car", *body.Car, utf8.RuneCountInString(*body.Car), 3, false))
			}
		}
		if utf8.RuneCountInString(body.Cid) > 64 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("body.cid", body.Cid, utf8.RuneCountInString(body.Cid), 64, false))
		}
		if !(body.Cdv == "ios" || body.Cdv == "and" || body.Cdv == "web") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.cdv", body.Cdv, []interface{}{"ios", "and", "web"}))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &playback.Playback{
		URL: body.URL,
		Pos: body.Pos,
		Dur: body.Dur,
		Bfc: body.Bfc,
		Bfd: body.Bfd,
		Fmt: body.Fmt,
		Pid: body.Pid,
		Crt: body.Crt,
		Car: body.Car,
		Cid: body.Cid,
		Cdv: body.Cdv,
	}

	return v, nil
}
